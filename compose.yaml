services:
  proxy:
    build: ./nginx_container
    container_name: "subtlesolve-proxy"
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - subtlesolve-network
    volumes:
      - web-root:/usr/share/nginx/html
      - ./nginx_container/:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      # - certbot
      # - subtlesolve-fe
      # - subtlesolve-be

  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - web-root:/usr/share/nginx/html
  #     - certbot-etc:/etc/letsencrypt
  #     - certbot-var:/var/lib/letsencrypt
  #   command: certonly --webroot --webroot-path=/usr/share/nginx/html  --email subtlesolve@gmail.com --agree-tos --no-eff-email --staging -d subtlesolve.org  -d www.subtlesolve.org

  # subtlesolve-fe:
  #   image: rohanj13/subtlesolverepo:react-app-${TAG}
  #   build: ./subtlesolve_frontend
  #   container_name: "subtlesolve-fe"
  #   depends_on:
  #     - subtlesolve-be
  #   networks:
  #     - subtlesolve-network

  # subtlesolve-be:
  #   build: ./backend
  #   container_name: "subtlesolve-be"
  #   depends_on:
  #     - postgres
  #     - keycloak
  #   networks:
  #     - subtlesolve-network

  postgres:
      image: postgres:16.0
      volumes:
        - postgres_data:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: keycloak_db
        POSTGRES_USER: keycloak_db_user
        POSTGRES_PASSWORD: password
      networks:
        - subtlesolve-network

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.4
    command: start --optimized
    container_name: keycloak
    environment:
      - DB_VENDOR=postgres
      - DB_ADDR=postgres
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=keycloak
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
    depends_on:
      - postgres
    # volumes:
    #   - certbot-etc:/etc/letsencrypt
    ports:
      - "8080:8080"
      # - "8443:8443"
    networks:
      - subtlesolve-network
volumes:
  postgres_data:
    driver: local
  certbot-etc:
  certbot-var:
  web-root:

networks:
  subtlesolve-network:
    name: subtlesolve-network
    driver: bridge