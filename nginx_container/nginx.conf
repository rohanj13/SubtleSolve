upstream subtlesolve-fe {
    server subtlesolve-fe:3000;
}

upstream subtlesolve-be {
    server subtlesolve-be:8081;
}

# # Update upstream for Keycloak to reflect the HTTPS configuration
upstream keycloakServer {
    server keycloak_container:8080;
}

server {
    listen 80;
    server_name www.subtlesolve.org;
    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }

    location /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
    }
}

server {
    listen 443 ssl;
    server_name www.subtlesolve.org;

    ssl_certificate /etc/letsencrypt/live/subtlesolve.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/subtlesolve.org/privkey.pem;
    
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
    
    location / {
        proxy_pass http://subtlesolve-fe;
    }

    location /api/ {
        proxy_pass http://subtlesolve-be;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_cache_bypass $http_upgrade;
    }

#    location /realms/ {
#       proxy_pass http://keycloakServer;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto $scheme;
#    }
}
server {
    listen 443 ssl;
    server_name auth.subtlesolve.org;

    ssl_certificate /etc/letsencrypt/live/subtlesolve.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/subtlesolve.org/privkey.pem;
    
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';

    location / {
        proxy_pass http://keycloakServer;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    error_page 500 502 503 504 /50x.html;

    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
